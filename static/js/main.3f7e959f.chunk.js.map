{"version":3,"sources":["components/errorBoundary.js","components/card/index.js","components/paginator/index.js","components/customContainer/index.js","App.js","reportWebVitals.js","index.js"],"names":["ErrorBoundary","props","state","error","errorInfo","this","setState","style","whiteSpace","toString","componentStack","children","React","Component","Card","item","removeItem","addFav","className","name","fav","onClick","id","icon","faStar","faUser","faTrashAlt","Paginator","length","perPage","setPerPage","currentPage","setCurrentPage","useState","pageNumbers","setPageNumbers","useEffect","page","i","Math","ceil","push","map","number","type","min","value","onChange","e","max","target","at","CustomContainer","init","data","setData","friend","setFriend","filteredData","setFilteredData","filteredText","setFilteredText","paginatedData","setPaginatedData","sortByIndex","a","b","sort","filteredItem","filter","includes","indexOfLastItem","indexOfFirstItem","items","slice","find","filterItems","updatedFavItem","updatedData","dataCopy","JSON","parse","stringify","x","y","placeholder","onKeyPress","key","payload","Date","now","prev","addFriend","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f7e959f.chunk.js","sourcesContent":["import React from \"react\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({\n      error: error,\n      errorInfo: errorInfo,\n    });\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      return (\n        <div>\n          <h2>Something went wrong.</h2>\n          <details style={{ whiteSpace: \"pre-wrap\" }}>\n            {this.state.error && this.state.error.toString()}\n            <br />\n            {this.state.errorInfo.componentStack}\n          </details>\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt, faStar, faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./card.css\";\n\nexport default function Card(props) {\n  const { item, removeItem, addFav } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-description\">\n        <div className=\"name\">{item.name}</div>\n        <div className=\"desc\">{`is your ${\n          item.fav ? \"favourite\" : \"\"\n        } friend`}</div>\n      </div>\n      <div className=\"card-action\">\n        <button className=\"btn\" onClick={() => addFav(item.id)}>\n          {item.fav ? (\n            <FontAwesomeIcon icon={faStar} />\n          ) : (\n            <FontAwesomeIcon icon={faUser} />\n          )}\n        </button>\n        <button className=\"btn\" onClick={() => removeItem(item.id)}>\n          <FontAwesomeIcon icon={faTrashAlt} />\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./paginator.css\";\n\nexport default function Paginator({\n  length,\n  perPage,\n  setPerPage,\n  currentPage,\n  setCurrentPage,\n}) {\n  const [pageNumbers, setPageNumbers] = useState([]);\n  useEffect(() => {\n    let page = [];\n    for (let i = 1; i <= Math.ceil(length / perPage); i++) {\n      page.push(i);\n    }\n    setPageNumbers(page);\n  }, [length, perPage]);\n\n  if (length < 1) {\n    return <div></div>;\n  }\n\n  return (\n    <ul className=\"paginator\">\n      {pageNumbers.map((number) => (\n        <li\n          className={number === currentPage ? \"active\" : \"\"}\n          key={number}\n          id={number}\n          onClick={() => setCurrentPage(~~number)}\n        >\n          {number}\n        </li>\n      ))}\n      <li>\n        Go To{\" \"}\n        <input\n          className=\"paginator-input\"\n          type=\"number\"\n          min={1}\n          value={currentPage}\n          onChange={(e) =>\n            setCurrentPage(\n              Math.min(Math.max(~~e.target.value, 1), ~~pageNumbers.at(-1))\n            )\n          }\n        ></input>\n      </li>\n      <li>\n        Per page{\" \"}\n        <input\n          className=\"paginator-input\"\n          type=\"number\"\n          min={1}\n          value={perPage}\n          onChange={(e) => {\n            setPerPage(Math.max(~~e.target.value, 1));\n            setCurrentPage(1);\n          }}\n        ></input>\n      </li>\n    </ul>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"../card\";\nimport \"./customContainer.css\";\nimport Paginator from \"../paginator\";\n\nexport default function CustomContainer() {\n  const [data, setData] = useState(init);\n  const [friend, setFriend] = useState(\"\");\n  const [filteredData, setFilteredData] = useState([]);\n  const [filteredText, setFilteredText] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(4);\n  const [paginatedData, setPaginatedData] = useState([]);\n\n  const sortByIndex = (a, b) => a.id - b.id;\n  useEffect(() => {\n    setData(init.sort(sortByIndex));\n  }, []);\n\n  useEffect(() => {\n    const filteredItem = data.filter((i) => i.name.includes(filteredText));\n    setFilteredData(filteredItem);\n  }, [filteredText, data]);\n\n  useEffect(() => {\n    const indexOfLastItem = currentPage * perPage;\n    const indexOfFirstItem = indexOfLastItem - perPage;\n    const items = (filteredText ? filteredData : data).slice(\n      indexOfFirstItem,\n      indexOfLastItem\n    );\n    setPaginatedData(items);\n  }, [currentPage, perPage, data, filteredText, filteredData]);\n\n  const addFav = (id) => {\n    const item = data.find((item) => item.id === id);\n    const filterItems = data.filter((item) => item.id !== id);\n    const updatedFavItem = {\n      ...item,\n      fav: !item.fav,\n    };\n    setData([...filterItems, updatedFavItem].sort(sortByIndex));\n  };\n\n  const removeItem = (id) => {\n    const updatedData = data.filter((item) => item.id !== id);\n    setData(updatedData.sort(sortByIndex));\n  };\n\n  const addFriend = () => {\n    const payload = {\n      id: Date.now(),\n      name: friend,\n      fav: false,\n    };\n    setData((prev) => [...prev, payload].sort(sortByIndex));\n    setFriend(\"\");\n  };\n\n  const sortByFav = () => {\n    const dataCopy = JSON.parse(JSON.stringify(data));\n    dataCopy.sort((x, y) => (x.fav === y.fav ? 0 : x.fav ? -1 : 1));\n    setData(dataCopy);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"list-container\">\n      <header className=\"list-header\">\n        <h1>Friends List</h1>\n      </header>\n      <div className=\"action-container\">\n        <button onClick={sortByFav}>sort by fav</button>\n        <input\n          value={filteredText}\n          onChange={(e) => setFilteredText(e.target.value)}\n          type=\"search\"\n          placeholder=\"Search Friend\"\n        ></input>\n        <input\n          type=\"text\"\n          value={friend}\n          onChange={(e) => setFriend(e.target.value)}\n          onKeyPress={(e) => {\n            if (e.key === \"Enter\") {\n              addFriend();\n            }\n          }}\n          placeholder=\"Add friend\"\n        ></input>\n      </div>\n      <div className=\"card-container\">\n        {(filteredText ? filteredData : paginatedData).map((item) => (\n          <Card\n            key={item.id}\n            item={item}\n            addFav={addFav}\n            removeItem={removeItem}\n          ></Card>\n        ))}\n      </div>\n      <Paginator\n        length={filteredText ? filteredData.length : data.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        setPerPage={setPerPage}\n        setCurrentPage={setCurrentPage}\n      />\n    </div>\n  );\n}\n\nconst init = [\n  { id: 1, name: \"vinamra\", fav: true },\n  { id: 2, name: \"bharati\", fav: false },\n  { id: 3, name: \"vivek\", fav: false },\n  { id: 4, name: \"sunny\", fav: true },\n  { id: 5, name: \"nitesh\", fav: true },\n  { id: 7, name: \"utsav\", fav: false },\n];\n","import ErrorBoundary from \"./components/errorBoundary\";\nimport CustomContainer from \"./components/customContainer\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ErrorBoundary>\n        <main className=\"main-section\">\n          <CustomContainer />\n        </main>\n      </ErrorBoundary>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}